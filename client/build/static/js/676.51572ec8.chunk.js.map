{"version":3,"file":"static/js/676.51572ec8.chunk.js","mappings":"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","sources":["components/Login.js"],"sourcesContent":["import React, { useState, useEffect, lazy } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport logo from '../assets/logo.png';\r\nconst DashedInput = lazy(() => import('../components/DashedInput'))\r\n\r\nfunction Login() {\r\n    const [credentials, setCredentials] = useState({\r\n        storedUsername: '',\r\n        username: '',\r\n        password: '',\r\n        mpin: '',\r\n        isPassSelected: false,\r\n        next: false,\r\n        passClass: 'bg-gray-300 translate-x-0',\r\n        pinClass: 'bg-indigo-900 text-white translate-x-0.5'\r\n    });\r\n\r\n    const setUsername = (value) => setCredentials({ ...credentials, username: value });\r\n    const setPassword = (value) => setCredentials({ ...credentials, password: value });\r\n    const setMpin = (value) => setCredentials({ ...credentials, mpin: value });\r\n    const setIsPassSelected = (value) => setCredentials({ ...credentials, isPassSelected: value });\r\n    const toggleNext = () => setCredentials({ ...credentials, next: !credentials.next });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const storedUsername = localStorage.getItem('username');\r\n        const storedMPIN = localStorage.getItem('smpin');\r\n        if (storedUsername && storedMPIN) {\r\n            setUsername(storedUsername);\r\n            setMpin(storedMPIN);\r\n        }\r\n    }, []);\r\n\r\n    const handleSkip = () => {\r\n        console.log(\"Skipp clicked\");\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        switch (name) {\r\n            case 'username':\r\n                setUsername(value);\r\n                break;\r\n            case 'password':\r\n                setPassword(value);\r\n                break;\r\n            case 'mpin':\r\n                setMpin(value);\r\n                break;\r\n            default:\r\n                console.warn(`Unexpected input name: ${name}`);\r\n        }\r\n    };\r\n    const handleSwitch = () => {\r\n        //setIsPassSelected(!credentials.isPassSelected);\r\n        setCredentials({\r\n            ...credentials,\r\n            isPassSelected: !credentials.isPassSelected,\r\n            pinClass: credentials.passClass,\r\n            passClass: credentials.pinClass\r\n        });\r\n    }\r\n    const handleLoginClick = () => {\r\n        if (!credentials.isPassSelected) {\r\n            const storedSmpin = localStorage.getItem('smpin');\r\n            if (credentials.mpin === storedSmpin) {\r\n                navigate('/');\r\n            } else {\r\n                navigate('/login');\r\n            }\r\n        } else {\r\n            axios.post('your_api_url', {\r\n                username: credentials.username,\r\n                password: credentials.password\r\n            }).then((response) => {\r\n                navigate('/');\r\n            }).catch((error) => {\r\n\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='flex flex-col justify-start h-full items-center text-blue-900'>\r\n            <div className='flex flex-col w-full'>\r\n                <div onClick={handleSkip} className='flex flex-row  justify-end p-3 font-normal text-lg'>\r\n                    <p className='cursor-pointer'>\r\n                        Skip\r\n                    </p>\r\n                </div>\r\n                <div className='logo w-full flex flex-row justify-center mt-20'>\r\n                    <img src={logo} alt='logo' className='h-20' />\r\n                </div>\r\n            </div>\r\n            {!credentials.next ? (\r\n                <div className='flex flex-col justify-evenly h-full w-full px-10 text-lg'>\r\n                    <div className='flex flex-col px-10 text-lg'>\r\n                        <label className='py-1'>\r\n                            Enter your username\r\n                        </label>\r\n                        <input type='text' name='username' value={credentials.username} onChange={handleChange} className='p-2 rounded text-gray-500' />\r\n                    </div>\r\n                    <div className='flex flex-col items-center'>\r\n                        <Link to={'../forgot-username'} >Forgot Username ?</Link>\r\n                        <button onClick={toggleNext} className='bg-indigo-900 my-5 py-2 px-4 text-white rounded'>Next</button>\r\n                        <Link to={'../register'} >Create an Account?</Link>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <div className='flex flex-col justify-evenly h-full w-full rounded px-10  text-lg'>\r\n                    <div className=' flex flex-row items-center rounded bg-gray-300 '>\r\n                        <button className={`${credentials.pinClass} py-1 w-full rounded `} onClick={handleSwitch} >MPIN</button>\r\n                        <button className={`${credentials.passClass} py-1 w-full rounded`} onClick={handleSwitch}>Password</button>\r\n                    </div>\r\n                    <div className='flex flex-col px-10 text-lg'>\r\n                        <label className='py-1'>\r\n                            Enter your {credentials.isPassSelected ? 'Password' : 'MPIN'}\r\n                        </label>\r\n                        {!credentials.isPassSelected ? <DashedInput\r\n                            maxlength={6}\r\n                            background=\"white\"\r\n                            dashColor=\"indigo-900\"\r\n                            onChange={setMpin}\r\n                        /> :\r\n                            <input type='password' name='password' value={credentials.password} onChange={handleChange} className='p-2 rounded text-gray-500' />\r\n                        }\r\n                    </div>\r\n                    <div className='flex flex-col items-center'>\r\n                        <Link to={'../forgot-username'} >Forgot {credentials.isPassSelected ? 'Password' : 'MPIN'} ?</Link>\r\n                        <button onClick={handleLoginClick} className='bg-indigo-900 my-5 py-2 px-4 text-white rounded'>Login</button>\r\n                        <Link to={'../login'} >Login as diffrent User</Link>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["DashedInput","lazy","credentials","setCredentials","useState","storedUsername","username","password","mpin","isPassSelected","next","passClass","pinClass","setUsername","value","setMpin","navigate","useNavigate","useEffect","localStorage","getItem","storedMPIN","handleChange","event","name","target","setPassword","console","warn","concat","handleSwitch","_jsxs","className","children","_jsx","onClick","handleSkip","log","src","logo","alt","type","onChange","maxlength","background","dashColor","Link","to","handleLoginClick","axios","post","then","response","catch","error","storedSmpin","toggleNext"],"sourceRoot":""}